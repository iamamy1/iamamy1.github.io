(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{388:function(e,t,r){"use strict";r.r(t);var a=r(46),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"introduction"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[e._v("#")]),e._v(" Introduction")]),e._v(" "),r("h2",{attrs:{id:"_1-1-tools"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-tools"}},[e._v("#")]),e._v(" 1.1 Tools")]),e._v(" "),r("ol",[r("li",[r("a",{attrs:{href:"https://github.com/pyg-team/pytorch_geometric",target:"_blank",rel:"noopener noreferrer"}},[e._v("PyTorch Geometric(PyG)"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/snap-stanford/deepsnap",target:"_blank",rel:"noopener noreferrer"}},[e._v("DeepSNAP"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/snap-stanford/GraphGym",target:"_blank",rel:"noopener noreferrer"}},[e._v("GraphGym"),r("OutboundLink")],1)])]),e._v(" "),r("h2",{attrs:{id:"_1-2-question"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-question"}},[e._v("#")]),e._v(" 1.2 Question")]),e._v(" "),r("p",[r("strong",[e._v("How can we develop neural networks that are much more broadly applicable?")])]),e._v(" "),r("h2",{attrs:{id:"_1-3-course-outline"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-course-outline"}},[e._v("#")]),e._v(" 1.3 Course Outline")]),e._v(" "),r("ul",[r("li",[e._v("Traditional method")]),e._v(" "),r("li",[e._v("Methods for node embeddings")]),e._v(" "),r("li",[e._v("Graph Neural Networks")]),e._v(" "),r("li",[e._v("Knowledge graphs and reasoning")]),e._v(" "),r("li",[e._v("Deep generative models for graphs")]),e._v(" "),r("li",[e._v("Applications to Biomedicine, Science, Industry")])]),e._v(" "),r("h2",{attrs:{id:"_1-4-classic-graph-ml-tasks"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-classic-graph-ml-tasks"}},[e._v("#")]),e._v(" 1.4 Classic Graph ML Tasks")]),e._v(" "),r("ul",[r("li",[r("strong",[e._v("Node classification:")]),e._v(" Predict a property of a node")]),e._v(" "),r("li",[r("strong",[e._v("Link prediction:")]),e._v(" Predict whether there are missing links between two nodes")]),e._v(" "),r("li",[r("strong",[e._v("Graph classification:")]),e._v(" Categorize different graphs")]),e._v(" "),r("li",[r("strong",[e._v("Clustering:")]),e._v(" Detect if nodes form a community")])]),e._v(" "),r("p",[e._v("Other tasks:")]),e._v(" "),r("ul",[r("li",[e._v("Graph generation: Drug discovery")]),e._v(" "),r("li",[e._v("Graph evolution: Physical simulation")])]),e._v(" "),r("h3",{attrs:{id:"example"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#example"}},[e._v("#")]),e._v(" Example")]),e._v(" "),r("p",[e._v("Example of Node-level ML Tasks:")]),e._v(" "),r("ul",[r("li",[e._v("Protein Folding")])]),e._v(" "),r("p",[e._v("Examples of Edge-level ML Tasks:")]),e._v(" "),r("ul",[r("li",[e._v("Recommender Systems")]),e._v(" "),r("li",[e._v("Drug Side Effects")])]),e._v(" "),r("p",[e._v("Example of Subgraph-level ML Tasks:")]),e._v(" "),r("ul",[r("li",[e._v("Traffic Prediction")])]),e._v(" "),r("p",[e._v("Examples of Graph-level ML Tasks:")]),e._v(" "),r("ul",[r("li",[r("p",[e._v("Drug Discovery")])]),e._v(" "),r("li",[r("p",[e._v("Physical Simulation")])])]),e._v(" "),r("h2",{attrs:{id:"_1-5-choice-of-a-graph-representation"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-choice-of-a-graph-representation"}},[e._v("#")]),e._v(" 1.5 Choice of a graph representation")]),e._v(" "),r("h3",{attrs:{id:"_1-5-1-components-of-a-network"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-1-components-of-a-network"}},[e._v("#")]),e._v(" 1.5.1 Components of a Network")]),e._v(" "),r("ul",[r("li",[r("strong",[e._v("Objects:")]),e._v("  nodes,  vertices                                    "),r("strong",[e._v("N")])]),e._v(" "),r("li",[r("strong",[e._v("Interactions:")]),e._v("  links, edges                                  "),r("strong",[e._v("E")])]),e._v(" "),r("li",[r("strong",[e._v("System:")]),e._v("  network,  graph                                    "),r("strong",[e._v("G(N,E)")])])]),e._v(" "),r("h3",{attrs:{id:"_1-5-2-different-graph-representation"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-2-different-graph-representation"}},[e._v("#")]),e._v(" 1.5.2 Different Graph Representation")]),e._v(" "),r("ul",[r("li",[e._v("Undirected Graph")]),e._v(" "),r("li",[e._v("Directed Graph")]),e._v(" "),r("li",[e._v("Bipartite Graph")]),e._v(" "),r("li",[e._v("Folded/Projected Bipartite Graph")]),e._v(" "),r("li",[e._v("Adjacency Matrix")]),e._v(" "),r("li",[e._v("Edge list")]),e._v(" "),r("li",[e._v("Adjacency list")]),e._v(" "),r("li",[e._v("Unweighted Graph")]),e._v(" "),r("li",[e._v("Weighted Graph")]),e._v(" "),r("li",[e._v("Self-edges(self-loops) Graph")]),e._v(" "),r("li",[e._v("Multi-graph")])])])}),[],!1,null,null,null);t.default=s.exports}}]);